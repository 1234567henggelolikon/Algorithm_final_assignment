<?xml version="1.0" encoding="UTF-8"?><i><chatserver>chat.bilibili.com</chatserver><chatid>6534615</chatid><mission>0</mission><maxlimit>1500</maxlimit><state>0</state><real_name>0</real_name><source>k-v</source><d p="183.38400,1,25,16777215,1469495346,0,7fd7816,2148288345">a 实例对象</d><d p="414.77000,1,25,16777215,1469495376,0,7fd7816,2148384529">加的话不该是减啊</d><d p="22.85000,1,25,16777215,1478232724,0,b410c7fb,2629876301">还在哦</d><d p="163.46000,1,25,16777215,1478232727,0,b410c7fb,2629880783">1,2，姗</d><d p="3.66300,1,25,16777215,1480731059,0,366f304a,2713999361">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;qzssmdx</d><d p="26.33600,1,25,16777215,1481011497,0,b8f4f464,2724676713">坚持</d><d p="601.92700,1,25,16777215,1481623619,0,e724d420,2745741601">为什么可以这样？</d><d p="654.69700,1,25,16777215,1484546560,0,4cf47940,2854185619">python是门高级语言，想知道为什么可以这样可以去看C语言的基础语言就懂了</d><d p="131.23800,1,25,16777215,1485187932,0,3947e6d8,2890385092">不知不觉更新到3.4咯</d><d p="726.41900,1,25,16777215,1486267942,0,4641f7e7,2956792182">人越来越少0.0</d><d p="16.46500,1,25,16777215,1486379276,0,ce81c884,2964624696">接上弹幕</d><d p="216.38700,1,25,16777215,1486634763,0,3ae3bda8,2979922732">sub吓我一跳</d><d p="422.32000,1,25,16777215,1486634768,0,3ae3bda8,2980007426">这样写不就是无限递归吗...</d><d p="662.53800,1,25,16777215,1486634773,0,3ae3bda8,2980030608">c语言是基础语言?那汇编是什么？</d><d p="670.81800,1,25,16777215,1487556634,0,c9537d82,3026031300">c也是高级语言</d><d p="731.86100,1,25,16777215,1487660592,0,785c5ec1,3030007972">左右以为涉及到二进制，和电路，贼难，电路不了解或者编程不了解就gg</d><d p="28.95400,1,25,16777215,1490285527,0,d82d528e,3132763378">2017.3.23</d><d p="35.45200,1,25,16777215,1490357312,0,7a502e1,3135116186">好多不懂的啊，有没有人教教</d><d p="68.57400,1,25,16777215,1490357313,0,7a502e1,3135118676">2017324</d><d p="136.06300,1,25,16777215,1491102686,0,f875f326,3166087096">&lt;-- 现在 3.6.1了.......</d><d p="27.24400,1,25,16777215,1491199363,0,41bcb882,3172031930">这里只有20个弹幕了 空气已经有点稀薄了！！！</d><d p="421.97200,1,25,16777215,1491224957,0,41bcb882,3174442062">有啊 - -</d><d p="57.87400,1,25,16777215,1491484179,0,be490e9f,3190764844">存活..</d><d p="6.56900,1,25,15138834,1492009899,0,40b3afe9,3217555062">20170412</d><d p="40.00500,1,25,16777215,1492934670,0,ac8966c8,3261898704">20170423</d><d p="70.62000,1,25,16777215,1494331728,0,4c8b4b95,3334377400">我大概知道你会讲什么了。。。</d><d p="356.67300,1,25,16777215,1494331732,0,4c8b4b95,3334399734">PY这里更容易理解</d><d p="414.71000,1,25,16777215,1494331733,0,4c8b4b95,3334404172">多个数怎么办</d><d p="670.75800,1,25,16777215,1494331738,0,4c8b4b95,3334424994">这样战有意义吗？</d><d p="744.65900,1,25,16777215,1494331739,0,4c8b4b95,3334430832">模拟电路还行</d><d p="38.62200,1,25,16777215,1494799581,0,414b7a27,3359018672">20170515</d><d p="28.32100,1,25,16777215,1496023845,0,ed7e311d,3414003177">2017年5月29日10:45:57</d><d p="607.59500,1,25,16777215,1496343785,0,3ff539af,3424376706">这里的int(self)是什么原理，默认构造函数，</d><d p="43.39000,1,25,16777215,1496725305,0,a498ade,3435230215">20170606</d><d p="611.40000,1,25,16777215,1498054224,0,d43c5cee,3478965700">类似运算符重载</d><d p="679.26500,1,25,16777215,1499263818,0,6fcf0ac6,3525106382">这不是站，是消除愚昧</d><d p="318.79600,1,25,16777215,1499320967,0,4f7fab59,3527197934">还有这种操作？</d><d p="326.15200,1,25,16777215,1499407321,0,b2f4bdf2,3530680320">python中，+，-之类的实际上是调用函数</d><d p="500.35200,1,25,16777215,1499407325,0,b2f4bdf2,3530693154">刚刚试了一下，如果运算符两边的类型不一致，会调用前面的类的魔法方法</d><d p="684.38600,1,25,16777215,1499929382,0,414b7a27,3553942448">被搞得更愚昧了怎么破。。</d><d p="675.61900,1,25,16777215,1500428477,0,639793ef,3576493062">怎么没意义？前面那是误导人还不让说 C是典型的高级语言</d><d p="0.29700,1,25,16777215,1500510634,0,9fb4bfbc,3580417140">第一条</d><d p="365.11900,1,25,16777215,1501126661,0,b45a2845,3610821451">为什么我敲出来仍然是8</d><d p="20.71900,1,25,16777215,1501552456,0,4641f7e7,3633193819">44条</d><d p="346.00200,1,25,16777215,1501725647,0,c6b896a4,3642550541">python真是太棒了</d><d p="457.33200,1,25,16777215,1501725787,0,c6b896a4,3642558916">+-本来就是一种函数操作（Python），你在函数内使用函数当然会递归了</d><d p="666.04100,5,25,16776960,1501725997,0,c6b896a4,3642571781">↑汇编是？那机器码算什么??</d><d p="45.76800,1,25,16777215,1501743867,0,d0c9c03f,3643869931">20170803</d><d p="643.90800,1,25,16777215,1501745800,0,d0c9c03f,3644014661">元组。。。</d><d p="316.32000,5,25,13369344,1501774243,0,49ef64ed,3646214604">所以a + b就是：a作为int类的实例化对象，调用了继承自int类__add__的魔法方法</d><d p="316.32000,5,25,13369344,1501774270,0,49ef64ed,3646216636">a + b 并不等同于 b + a</d><d p="592.18700,5,25,13369344,1501774838,0,49ef64ed,3646259914">但是功能和int.__add__重合</d><d p="667.43900,5,25,13369344,1501774998,0,49ef64ed,3646272108">↑机器码？那我晶圆算什么？？//（逃）</d><d p="139.93500,1,25,16777215,1501868537,0,1332c419,3651330310">3.62....</d><d p="668.50400,5,25,16777215,1502012283,0,a5dac06f,3658423696">↑晶园？那我硅算什么？</d><d p="144.52800,1,25,16777215,1502185227,0,c73fa186,3667353244">4.3.2.........</d><d p="697.19500,1,25,16777215,1502185993,0,c73fa186,3667405262">不要骗他</d><d p="240.10200,1,25,16777215,1502299875,0,2d41cdee,3673989737">C++中也有这种机制</d><d p="291.89600,1,25,16777215,1502773563,0,bfcb3fc9,3699128598">为啥要重新定义，他本来不是就有这个功能吗？</d><d p="653.98300,1,25,16777215,1502979327,0,2e0e1306,3710982706">灵魂画手</d><d p="46.52100,1,25,16777215,1503110732,0,6e509526,3717283039">20170816</d><d p="158.22000,1,25,16777215,1503111261,0,9a6c47aa,3717316668">python 100.3.4</d><d p="608.67900,1,25,16777215,1503471148,0,53bbe8a6,3737263624">是不是int（self）以后的+调用的是int里的加法啊？</d><d p="612.22800,4,18,16777215,1503938027,0,9632916c,3763105888">1-1、int()可以将括号内的参数转换为整型 </d><d p="612.22800,4,18,16777215,1503938097,0,9632916c,3763109609">1-1-1、/*应该可以看成构造函数吧*/</d><d p="612.22800,4,18,16777215,1503938109,0,9632916c,3763110171">1-2、它需要括号内的参数有一个转换方法</d><d p="612.22800,4,18,16777215,1503938125,0,9632916c,3763111043">1-2-1、/*方法名似乎是__trunc__，不是非常确定它的转化机制*/</d><d p="612.22800,4,18,16777215,1503938136,0,9632916c,3763111601">2-1、那么int（self）就是将self /*Try_int类*/ 转化成int类</d><d p="612.22800,4,18,16777215,1503938150,0,9632916c,3763112321">2-2、/*Try_int类继承于int类，而int类包含__trunc__方法*/</d><d p="613.05800,4,18,16777215,1503938290,0,9632916c,3763119462">3、因此return int（self）+int（other）调用的就是int类的add方法了</d><d p="36.46400,1,25,16777215,1504539532,0,cf763e4a,3788405810">71条弹幕</d><d p="222.59000,1,25,16777215,1504539757,0,cf763e4a,3788415571">subway</d><d p="365.88100,1,25,16777215,1504853877,0,a2b2ffb,3795883614">c++里的运算符重载</d><d p="427.38100,1,25,16777215,1504853928,0,a2b2ffb,3795884863">无限递归+1</d><d p="154.00000,1,25,16777215,1504963475,0,4093bcf2,3799940363">5.3.9了</d><d p="256.00000,1,25,16777215,1504963446,0,4093bcf2,3799945798">应该是运算符重载的封装</d><d p="610.33100,1,25,16777215,1505391456,0,7aa61d05,3811199647">把self绑定了int</d><d p="41.72100,5,25,16711680,1505704903,0,9f68629e,3820532041">同好多不懂！买了3本书，学完视频就是把书过一遍！</d><d p="41.72100,5,25,16711680,1505704965,0,9f68629e,3820533073">课后习题！28章开始完全不会做，看答案好多也不能理解！</d><d p="41.72100,5,25,16711680,1505705040,0,9f68629e,3820534270">把书本过完再去做小甲鱼的课后题！要不然一直处于蒙蔽状态</d><d p="590.91200,1,25,16777215,1505891070,0,c9257c44,3824640449">为什么这样就没错了</d><d p="312.49700,1,25,16777215,1506081504,0,e633b836,3828889952">厉害了</d><d p="36.63600,1,25,16777215,1506305273,0,f4c16ca4,3836036446">2017,9,25</d><d p="311.45900,1,25,16777215,1506648051,0,66ada217,3844416006">应该是c＋＋里面的运算符重载</d><d p="212.21800,1,25,16777215,1506929073,0,a2e3e3f7,3852947628">操作符重载吗？</d><d p="670.16600,5,25,16777215,1506929604,0,a2e3e3f7,3852967716">硅？那我质子中子电子算什么????</d><d p="245.84900,1,25,16777215,1507035200,0,7b94d974,3857725356">class一个妞</d><d p="144.52500,1,25,16777215,1507115408,0,f0f58924,3861337703">现在4.0.1了</d><d p="166.02300,1,25,16777215,1507115472,0,f0f58924,3861341812">现在都不叫Python了，现在叫Dragon了</d><d p="7.07200,1,25,16777215,1507184807,0,4d01786c,3864258414">弹幕低于100条了</d><d p="34.38800,1,25,16777215,1507184828,0,4d01786c,3864259547">坚持</d><d p="123.03200,1,25,16777215,1507184896,0,4d01786c,3864263412">然而我忘了。。。????</d><d p="356.02700,1,25,16777215,1507185056,0,4d01786c,3864272529">plank</d><d p="42.59800,1,25,16777215,1507555069,0,384d9009,3879917182">10月 9</d><d p="88.70100,1,25,16777215,1507793816,0,8b664b76,3887733656">为没满的100条弹幕献上一条</d><d p="143.14300,1,25,16777215,1508049561,0,e0ba1d22,3895912177">3.6.3啦</d><d p="15.28100,1,25,16777215,1508388034,0,f45fe613,3904221927">弹幕由我来接</d><d p="355.76600,1,25,16777215,1508388488,0,f45fe613,3904238117">真好玩</d><d p="141.24600,1,25,16777215,1508775964,0,a823a4,3915950846">3.6.3...</d><d p="148.23800,1,25,16777215,1508775994,0,a823a4,3915951630">4.0.1?你怕不是从未来穿越来的吧</d><d p="233.62100,1,25,16777215,1509369752,0,8a6aeda5,3930964454">看到表格下意识看了下进度条</d><d p="419.78000,1,25,16777215,1509370166,0,8a6aeda5,3930972585">我猜有</d><d p="679.34400,1,25,16777215,1509943195,0,b684ef72,3945739990">C算"中级语言"吧</d><d p="149.83800,1,25,16777215,1510047380,0,a9973c17,3948097539">5.1</d><d p="459.92100,1,25,16777215,1510055388,0,185176e,3948430352">记住 +就等于add</d><d p="477.71600,1,25,16777215,1510055405,0,185176e,3948431027">11.7  你们两个好啊</d><d p="225.73600,1,25,16777215,1510875512,0,49ffbc07,3968897554">subspace</d><d p="630.07200,1,25,16777215,1510976847,0,b140be65,3971525361">底部正解</d><d p="4.63200,1,25,16777215,1511079617,0,1b57e8c9,3975342882">像少年啦飞驰</d><d p="731.98400,1,25,16777215,1511168515,0,668bbfb,3977632260">我还在</d><d p="225.07900,1,25,16777215,1511955707,0,ecca7049,3996618673">对象间可以进行计算</d><d p="194.03100,1,25,16777215,1511955861,0,ecca7049,3996624639">python无处不对象</d><d p="204.52800,1,25,16777215,1511955928,0,ecca7049,3996627402">魔法方法可以让你自定义数值处理</d><d p="211.29500,1,25,16777215,1511956003,0,ecca7049,3996630372">通过对一些魔法方法的重写，你可以自定义任何对象间的算术运算</d><d p="337.41500,1,25,16777215,1511956956,0,ecca7049,3996668719">python中 +,-是调用魔术方法</d><d p="161.73700,1,25,16777215,1512457901,0,e57d93d6,4014895599">7.0</d><d p="353.07000,1,25,16777215,1513232986,0,bd97d02b,4034718109">这里一定要用继承int吗？</d><d p="594.49800,1,25,16777215,1513521528,0,cb274557,4043427030">加入int后是int(3) +int(5) 不再是Try_int(3)+Try_int(5)了</d><d p="128.33800,1,25,16777215,1513950600,0,6b7c9453,4052755777">type(type)也是&lt;class 'type'&gt;</d><d p="16.45000,1,25,16777215,1513998557,0,8145de6b,4053803285">跳过了所有和对象有关·······</d><d p="294.61200,1,25,16711935,1514193743,0,9f68629e,4059785689">书上说，类定义要用大驼峰命名法不建议用下划线</d><d p="363.79200,1,25,16711935,1514194172,0,9f68629e,4059796786">不继承int的话  return int.__sub__(self, other)就会报错</d><d p="400.93600,1,25,16711935,1514194379,0,9f68629e,4059802334">我把other换成abc或其他就会报错， 小污龟这是为什么呢，龟兄？</d><d p="142.46100,1,25,41194,1514856355,0,1a25faee,4150215500">3.7了</d><d p="172.26000,1,25,41194,1514856451,0,1a25faee,4150216585">前面的弹幕，去骗后人吧.......</d><d p="61.32300,1,25,16777215,1514985952,0,aa3e127c,4154220207">自学真的没有那么容易</d><d p="115.68100,1,25,16777215,1514986014,0,aa3e127c,4154222929">怎么样弹幕才能升级</d><d p="325.44800,1,25,16777215,1514986223,0,aa3e127c,4154231891">皮得不行</d><d p="562.33400,1,25,16777215,1514986460,0,aa3e127c,4154242478">立方懵逼</d><d p="235.00000,1,25,16777215,1515243828,0,35d06918,4161315896">妞</d><d p="415.19400,1,25,16777215,1515416418,0,7854887f,4167022163">梭哈不可以</d><d p="205.63500,1,25,16777215,1515650526,0,92f140e8,4172561330">学完python 对象也就没了</d><d p="165.63200,5,25,16777215,1515737865,0,b152ebae,4174653248">弹幕戏精</d><d p="526.40400,1,25,16777215,1515769525,0,ea0d4249,4175922573">啥是递归</d><d p="572.74600,1,25,16777215,1515769686,0,ea0d4249,4175931366">为什么要继承int</d><d p="660.53900,1,25,16777215,1515815580,0,f22a9128,4176881381">不应该是pow()么</d><d p="20.80000,1,25,16777215,1515925511,0,1ad366f,4181127663">点击666。。。</d><d p="40.91500,1,25,16777215,1515943954,0,25c8214,4182032849">在对象这块阵亡很多。。。。。</d><d p="220.73400,1,25,16777215,1516274980,0,a42e423c,4190553377">运算符重载</d><d p="692.39900,1,25,16777215,1516275709,0,a42e423c,4190584806">看编译原理啊，看其他语言有什么用</d><d p="296.18500,1,25,16777215,1516436993,0,3af2c8e7,4195588902">巧妙</d><d p="570.11800,1,25,16777215,1516437249,0,3af2c8e7,4195599399">无限懵逼</d><d p="139.23300,1,25,16777215,1516536952,0,19a5593e,4199178714">现在3.6.2喽。。</d><d p="517.07300,1,25,16777215,1516795095,0,9c677e39,4209935396">第二遍终于看懂了</d><d p="0.99900,1,25,16711680,1516875672,0,75acd0db,4212469615">N~2018/1/25</d><d p="496.81800,1,25,16777215,1516949810,0,7906ca95,4214836265">筛漏服</d><d p="22.94700,1,25,16777215,1517085344,0,549713e8,4220271429">从类开始就很难了</d><d p="56.27100,1,25,16777215,1517198573,0,a04ffd48,4224152939">不懂的去百度啊。。。。学编程还想着别人手把手教。。。</d><d p="618.99900,1,25,16777215,1517199059,0,a04ffd48,4224171893">int（class a），a类就变成了一个整数就不会调用类的new'函数</d><d p="29.70900,1,25,16777215,1517457344,0,b3df0342,4243226911">02/01/208</d><d p="323.58800,1,25,16777215,1517470090,0,2c8dd520,4243780265">看到这里  感觉我离python越来越远。。</d><d p="50.98100,1,25,16777215,1517489950,0,5d3d4578,4244766400">20182.1另一个朋友你好啊</d><d p="738.32300,1,25,16777215,1517490494,0,5d3d4578,4244799144">左移一位相当于乘二，右移一位相当于整除2</d><d p="669.36200,5,25,16777215,1517745520,0,75f211dc,4254410080">↑硅？那我质子算什么？</d><d p="669.36200,5,25,16777215,1517745550,0,75f211dc,4254411831">↑质子？那我夸克算什么？</d><d p="360.81700,1,25,16777215,1517755369,0,7d4395bc,4255052122">这里定义的是前一个数，b直接int也是同样的结果</d><d p="594.26300,1,25,16777215,1517833586,0,a6beaf78,4257967617">这样不太好，返回值的类型不是Try_int而是int了</d><d p="322.08100,1,25,16777215,1517833751,0,70a5d99a,4257977734">初学者的认知：本来就有加法“+”，但是用__add__相当于把可以"+"这个概念想怎么改怎么改（施加了魔法），甚至可以使人们观念中的"+”变成减运算。当然也可以不变</d><d p="5.31600,1,25,16777011,1518028708,0,119d4997,4272889555">大家好我是小甲龟</d><d p="508.04800,1,25,16777215,1518071537,0,29bab8e1,4275404499">2018</d><d p="217.22100,1,25,16777215,1518582529,0,8e7e3df3,4297479368">情人节学py 稳</d><d p="587.97400,1,25,16777215,1518582997,0,8e7e3df3,4297504426">改成整形加减 所以没有调用add方法所以不循环?</d><d p="272.62900,1,25,16777215,1518715515,0,335c185,4305121758">就是将int原有的方法进行覆盖</d><d p="233.19800,1,25,16777215,1518780676,0,5f1cbaec,4307698427">这个厉害了</d><d p="296.51900,1,25,16777215,1518780766,0,5f1cbaec,4307704084">那个是java吧</d><d p="530.53000,1,25,16777215,1518781543,0,5f1cbaec,4307754528">【释义】递归：见递归</d><d p="175.19600,1,25,16777215,1519363463,0,7d3baf49,4334583503">Ｐｙｔｈｏｎ　x.11</d><d p="363.11800,1,25,16777215,1519453640,0,cbf7d116,4338789773">3.4.1</d><d p="557.58800,1,25,16777215,1519453834,0,cbf7d116,4338800459">问递归的回去复习一下前面内容</d><d p="66.35800,1,25,16777215,1519466305,0,e81f972f,4339505779">20182.24</d><d p="5.15500,1,25,16777215,1519641798,0,2106e49b,4346298633">互谅的光大喷油门</d><d p="64.90000,1,25,16777215,1519642218,0,2106e49b,4346317751">人家问一下都不行？你自己不想解答但还有我们呢</d><d p="416.64400,1,25,16777215,1519645475,0,2106e49b,4346477633">猝不及防</d><d p="634.99000,1,25,16777215,1519645746,0,2106e49b,4346491464">滴吗的</d><d p="144.24200,1,25,16777215,1520060457,0,4d51b987,4361350675">3.64</d><d p="156.02200,1,25,16777215,1520236335,0,f95af8c,4367280012">我6.1啦，你们咋还不更新呢</d><d p="744.70900,1,25,16777215,1520237297,0,f95af8c,4367298723">嗲掉</d><d p="660.15400,1,25,16777215,1520258774,0,71ba3da2,4368059986">好好好</d><d p="566.66900,1,25,16777215,1520836193,0,e935f84c,4382819470">add是加法，调用了以后下面又是做加法，所以就回去了</d><d p="139.58000,1,25,16777215,1521639475,0,3430c399,4403017508">3.6.4</d><d p="285.23300,1,25,16777215,1521681834,0,169437aa,4403737219">跳过类和对象的那个朋友，你还好吗？</d><d p="605.93600,1,25,16777215,1521901728,0,e6c442bb,4410098952">加了int以后，变成整型相加，不再调用类类型的add方法</d><d p="355.22500,1,25,16777215,1522202574,0,e6c442bb,4418011826">如果不继承的话，New_int类并没有add和sub的功能</d><d p="410.10100,1,25,16777215,1522202776,0,e6c442bb,4418014721">有问题，因为只要对象“+”就会调用add，返回时仍然是对象self“+”other，又继续调用add，无限循环</d><d p="597.84200,1,25,16777215,1522202968,0,e6c442bb,4418017448">两个整型相加，就没调用Try_int了，而是调用的int自己的加法运算，不再出现递归</d><d p="158.32100,1,25,16777215,1522310516,0,7a377757,4420438703">所有语言已经都被Python10.0 取代了</d><d p="737.74600,1,25,16777215,1522322591,0,dfeac4ad,4420768943">蒙</d><d p="598.25700,1,25,16777215,1522587244,0,c667c57f,4429136029">因为之前没加int的时候  返回的是实例化的两个对象  对象+对象就又调用了add方法  加了int把对象变成了两个整形数</d><d p="683.27900,1,25,16777215,1522587352,0,c667c57f,4429140693">`这里主要涉及二进制</d><d p="541.12700,1,25,6724095,1523085136,0,9640d6d1,4444040314">为什么我的递归只有4，5行啊</d><d p="168.70800,1,25,16777215,1523103355,0,f7e9e7bb,4444848527">今天统一了，纪念。</d><d p="20.77800,1,25,16777215,1523373903,0,17cb2076,4451797238">2018/04/10 23:24另外4位伙伴晚上好</d><d p="574.92300,1,25,3381759,1523669821,0,9198ffee,4458813600">递归的图形表示就是a-&gt;b-&gt;c,返回就是c-&gt;b-&gt;a</d><d p="79.83100,1,25,16777215,1523700864,0,9aa0f69d,4460110957">装逼还装出优越感来了</d><d p="669.89400,1,25,16777215,1523702455,0,9aa0f69d,4460187028">那我的键盘算什么</d><d p="422.51900,1,25,16777215,1524230855,0,c5611e0b,4474165265">猝不及防</d><d p="202.83100,1,25,16777215,1524449336,0,85580573,4481422432">Java一切皆对象</d><d p="9.14900,1,25,10027008,1524615613,0,fd07a77f,4485527317">互凉的广大喷友们大家吼，我撕小姐姐</d><d p="159.26900,1,25,10027008,1524616485,0,fd07a77f,4485536478">2018年4月 3.6版本</d><d p="1.13500,1,25,16763904,1524715754,0,53e678c5,4487765115">路飞的女朋友是最棒的！</d><d p="585.62500,4,25,15138834,1524746628,0,86bb7307,4488741475">个人认为self和other是int_try类的数加减法要调用魔法方法</d><d p="585.62500,4,25,15138834,1524746637,0,86bb7307,4488741865">调用int函数后就不再是try_int类里的数了加减法不再用魔法方法</d><d p="587.26000,4,25,15138834,1524746657,0,86bb7307,4488742756">调用int函数后就不再是try_int类里的数了加减法不再用魔法方法</d><d p="593.32300,1,25,16777215,1525277755,0,ece0f5c6,4506478616">因为int（数字）就变成数字本身了</d><d p="528.20600,1,25,16777215,1525409917,0,5e54c597,4509431691">return int.__add__(self,other)</d><d p="514.08300,1,25,16777215,1525439242,0,852746c,4510520479">看两篇才懂</d><d p="730.31300,1,25,16777215,1525593698,0,7c9f481d,4516320635">不少！</d><d p="316.23100,1,25,16777215,1525620003,0,f18b1d28,4517659482">天呐 看到这里 对于上一节课那个__new__（cls,string)才恍然大悟…原来new是两个类都有的…</d><d p="597.35500,1,25,16777215,1525690634,0,8f1b2643,4519169914">感谢</d><d p="62.51700,1,25,16777215,1525719526,0,58cfbcfb,4520330542">各位学习python的同学们我建了一个QQ群，大家一起学习把490172248，加油一起努力！！！</d><d p="669.99500,5,25,16711680,1525720490,0,58cfbcfb,4520338421">↑夸克？那我前子算什么？</d><d p="406.52100,1,25,16777215,1525759144,0,89c4f028,4520927275">因为你忘记改其他的变量名了</d><d p="162.53900,1,25,16777215,1526227350,0,b76e49cf,4535511768">弹幕里瞎说很有优越性？</d><d p="578.82600,5,25,38979,1526442930,0,82102b04,4540264616">1.回答一下弹幕说的问题为什么要继承int：因为如果不继承int就要重写init方法才能创造整数</d><d p="578.82600,5,25,38979,1526443062,0,82102b04,4540267685">2.小甲鱼说的这个方法虽然可行但是得到的和就不是tryint类了而是int类，如果要二次加工很可能会出问题</d><d p="585.18900,5,25,38979,1526443563,0,82102b04,4540280199">3.出问题</d><d p="446.47900,1,25,16777215,1526714716,0,943485cd,4547731279">_add__重写的时候用了加号,加号又去掉用__add__方法,递归了</d><d p="594.39600,1,25,16777215,1526738249,0,aaa34433,4548893666">a (对象)= int(1)  b(整形) = int（a（对象））</d><d p="287.49200,1,25,16777215,1526817137,0,2be2b527,4551680470">520学python，你不是一个人在战斗</d><d p="10.94600,1,25,16777215,1527153682,0,485025ff,4560091003">我是小乌龟</d><d p="247.31400,1,25,16777215,1527257508,0,a4fc314,60468090634242">现在是北京时间: 2020/3/30/18:35</d><d p="574.03600,1,25,16777215,1527335783,0,ae6b76ac,101506540896258">因为这里加上了int，所以这里的“+”是调用int的__add__方法</d><d p="616.41800,1,25,16777215,1527511430,0,9e1133c,193595990605826">由于之前是一直在调用a +b，所以一直在递归。现在转化为int型的值，并不是传了class对象，所以就可以了</d><d p="19.77200,1,25,16777215,1527583778,0,9618a97f,231527391166466">Zonda</d><d p="268.84800,1,25,16777215,1527995238,0,30d7203a,447251109380098">saierfu</d><d p="301.03200,1,25,16777215,1527995270,0,30d7203a,447267962093570">self =&gt; sai er fu</d><d p="1.79100,1,25,16777215,1528796532,0,156e9eca,867359917604864">路飞的老婆</d><d p="607.57400,1,25,16777215,1528870457,0,bd996fc7,906117648482304">感谢弹幕</d><d p="705.24200,1,25,16777215,1529722684,0,1b1c1581,1352930391228416">位就是二进制单位，按位与就是二进制每一位与</d><d p="423.97800,1,25,16777215,1529739892,0,d5939dcc,1361952194953216">计算不出结果，只会x+y</d><d p="506.84300,1,25,16777215,1530186094,0,d7d5906d,1595890323685378">看了N遍懂了 小甲鱼能够把说的写出来就更容易理解了。。</d><d p="61.45500,1,25,16777215,1530324043,0,96c94252,1668215291772928">说实话讲的真烂，要不是买了小甲鱼的书我都不会看，简单的概念都讲复杂了，而且买了书，还要另花钱才能做课后作业，建议新手看看廖雪峰的python教程吧，在买本老外编的书。</d><d p="451.56800,1,25,16777215,1530324561,0,96c94252,1668487335378948">买了你的书了，还要买你的u盘，真黑。</d><d p="517.62500,1,25,16777215,1530793968,0,76e8a067,1914591773196292">学过C语言秒懂</d><d p="678.53500,1,25,16777215,1530797688,0,76e8a067,1916541930045440">C语言是高级语言那个，你认真的？</d><d p="145.88700,1,25,16777215,1530941396,0,d81e5248,1991886461468672">现在，3.7.0了2018.7</d><d p="508.77400,1,25,16777215,1531032974,0,70a8d4e5,2039899497168900">因为self + other 这里有个加号，所以一直进入def __add__</d><d p="598.30500,1,25,16777215,1531033139,0,70a8d4e5,2039986269978628">int() 跟tryint()</d><d p="50.59900,1,25,13369344,1531130153,0,8049bf1f,2090849250836484">要理解每一句语句它被执行后的结果是怎么样的</d><d p="596.47500,1,25,16777215,1531191365,0,7f8c79fc,2122941980475392">self中的加法不再调用Try中的加法</d><d p="141.15000,1,25,16777215,1531381326,0,fb52c8f6,2222536461385728">现在3.7刚出了</d><d p="10.23600,1,25,16777215,1531468814,0,3813138e,2268405397192708">大家吼，我是路飞</d><d p="245.11900,1,25,16777215,1531540168,0,60e54353,2305815176806400">2018/7/14 byr报道</d><d p="463.62800,1,25,16777215,1531559313,0,57bdf311,2315852845154304">人家的+号就是调运add 这样的话是自己不断调运自己</d><d p="131.85300,1,25,16777215,1531571283,0,cbaab9d,2322128417325056">难怪累</d><d p="621.58900,1,25,16777215,1531571974,0,cbaab9d,2322490479083520">改写的是子类try_int的__add__方法，而它继承的父类int里的__add__方法并没有被改写</d><d p="404.57200,1,25,16777215,1531583548,0,8038db7c,2328558627717120">因为self是实例对象啊~abc不是~</d><d p="687.02200,1,25,16777215,1531584644,0,8038db7c,2329133597065220">C本来就是高级语言</d><d p="687.02200,1,25,16777215,1531584650,0,8038db7c,2329136561913856">你们大学是怎么学的。。。。。</d><d p="96.19900,1,25,16777215,1531619859,0,bab2c9c3,2347596284690432">第250条弹幕</d><d p="99.44200,1,25,16777215,1531702906,0,babb0f61,2391136829702144">第251条弹幕</d><d p="651.12700,1,25,16777215,1531731042,0,400bdb63,2405888356777984">divmod 好像讲错了</d><d p="655.19500,1,25,16777215,1531731152,0,400bdb63,2405946116014080">divmod 返回一个元组，里面有两个数，第一个是商，第二个是余数</d><d p="222.79700,1,25,16777215,1532342672,0,63b99202,2726558698045440">现在小甲鱼已经80高寿了</d><d p="307.13800,1,25,16777215,1532342740,0,63b99202,2726594074902528">类似于C++中的运算符重载</d><d p="685.88700,5,25,16711680,1532343095,0,63b99202,2726780317728772">说明：C的确是高级语言，伙计们</d><d p="38.94500,1,25,16777215,1532503616,0,50ccd9e,2810939185823746">26岁0基础学这个坚持到这里</d><d p="11.45900,1,25,16707842,1532677436,0,8ae85875,2902071308713984">我是路飞的21个女朋友 </d><d p="8.45100,1,25,16707842,1532677418,0,8ae85875,2902061569015812">互谅的广大朋友们大叫</d><d p="700.89300,1,25,16707842,1532678256,0,8ae85875,2902501246894084">左移1位就是乘以2 右移除以二</d><d p="357.01000,1,25,16777215,1532777716,0,a8ec2860,2954646787194884">不继承，Newint就没INT的那些方法了</d><d p="66.04700,1,25,16711680,1532777717,0,1a0983c3,2954647228121088">自学一定不要图快，图的是弄懂，不要光看视频要多去百度搜索。多逛逛CSDN看看大牛们写的代码，再重新回来看视频相信你有不小收获</d><d p="581.26400,1,25,16777215,1532778276,0,a8ec2860,2954940580888576">+号前面是谁，就是调用谁的add方法，，所以这里是调用了int的add加法，</d><d p="148.50700,1,25,16777215,1532868140,0,7ab11c10,3002055008976900">为什么我python6.1，现在才2035年啊</d><d p="143.01200,1,25,16777215,1533111907,0,c593e5c8,3129859157000192">3.71</d><d p="560.70100,1,25,16777215,1533112349,0,c593e5c8,3130090755981316">为什么这样就可以了</d><d p="563.53000,1,25,16777215,1533197724,0,60e92776,3174851926294532">这里的““+”调用的就是int类型的__add__方法，之前调用的是自身（self）的所以会递归</d><d p="262.96400,1,25,16777215,1533262783,0,41816ead,3208961595015168">C＋＋的操作符重载～</d><d p="558.71200,1,25,16777215,1533275637,0,653bedc0,3215700808695812">脱裤子放屁 哈哈哈</d><d p="110.74900,1,25,16777215,1533292416,0,2e72d9ba,3224497956061188">哇，这一集弹幕只有200多条</d><d p="192.46500,1,25,16777215,1533298618,0,e7e654db,3227749609635842">哇，突然发现类对象居然可以计算</d><d p="573.27600,1,25,16777215,1533311233,0,c288a32b,3234363350712320">之前是在Try_int类的__add__方法里面调用了Try_int的__add方法，所以会无线递归</d><d p="573.27600,1,25,16777215,1533311278,0,c288a32b,3234387042762756">现在是在Try_int的add方法里面调用了int的add方法，所以不会出问题</d><d p="27.45300,1,25,16777215,1533369403,0,3062bc70,3264861254451202">弹幕越来越少了</d><d p="643.35600,1,25,16777215,1533458737,0,56b98a49,3311697689313280">错别字</d><d p="637.04800,1,25,16777215,1533542271,0,a19d8dc1,3355493629689856">为什么 + 就进入__add__。 - 就进入__sub__？？？</d><d p="672.52300,1,25,16777215,1533971375,0,d0b4818,3580468007534596">你？那你精子算什么？</d><d p="530.56400,1,25,16777215,1533993233,0,875b2f9,3591927616765956">没改之前，self和other都是Try_int类，这样他们相加就会调用Try_int类的加法(__add__)然而这个加法的定义就是调用加法而不是运算</d><d p="36.32100,1,25,16777215,1534055220,0,bdd9c5,3624426924408832">我来贡献一个弹幕吧</d><d p="43.53900,1,25,16777215,1534068649,0,aba60fb2,3631467707498496">为钱而学习python</d><d p="55.06200,1,25,16777215,1534227865,0,497cdeae,3714942366646274">封装类</d><d p="28.38300,1,25,16777215,1534301855,0,ec53609c,3753734760824832">3个人</d><d p="39.58600,1,25,16777215,1534301867,0,ec53609c,3753740641763332">8/25</d><d p="681.97600,1,25,16777215,1534399662,0,2464822c,3805013745336320">are you sure？中级语言。。。。。。</d><d p="150.10900,1,25,16777215,1534411526,0,92e37f10,3811233848885248">咿呃杉</d><d p="351.24200,1,25,16777215,1534424627,0,92e37f10,3818102344122368">算术是看到啥号会调用啥方法咯，然后方法的内容就不一定是方法的意思</d><d p="454.74500,1,25,16777215,1534424789,0,92e37f10,3818187360567300">关键是小甲鱼还是完全按着书上的讲的，连骚话都一样，而且视频里还偶尔会有书上没有的补充</d><d p="36.43700,1,25,16777215,1534554246,0,ec53609c,3886060377473026">一个人</d><d p="149.96600,1,25,16777215,1534559219,0,7d021fa6,3888667464040448">4.0.1的站住，活捉一个未来人</d><d p="171.05800,1,25,16777215,1534559409,0,7d021fa6,3888767230803972">Dragon要笑死我么，红红火火恍恍惚惚</d><d p="669.34300,1,25,16777215,1534560664,0,7d021fa6,3889425258905600">沙雕弹幕哈哈哈</d><d p="706.89400,1,25,16777215,1534639522,0,ec53609c,3930769350197248">弹幕王者</d><d p="737.95400,1,25,16777215,1534639553,0,ec53609c,3930785564327936">又是1个人</d><d p="694.60500,1,25,16777215,1534639510,0,ec53609c,3930762857414656">？？？？？？？？？？？？？？？？？？？？？？</d><d p="148.76000,1,25,16646914,1534765713,0,f475ab9,3996929767768064">大家好</d><d p="683.03000,1,25,16777215,1534901133,0,e7afe1e,4067928682004484">C 面向过程语言 标准的高级语言 因为C简化了大部分分配内存的操作。向汇编这种基本的数学计算都要分配内存大小空间，这种才算</d><d p="92.78300,1,25,16777215,1534928004,0,bd4a85e6,4082017201815552">我觉得讲的挺好的，我就学过C语言，看到这里感觉挺基础的挺容易的啊，前面你自己听不懂，就说讲的烂，估计你是边看弹幕边学的吧</d><d p="352.99200,1,25,4351678,1534937447,0,604b67d0,4086967618764804">另一本数上写的是python中，一切皆对象</d><d p="424.69600,1,25,4351678,1534937562,0,604b67d0,4087028035616768">自身调用自身咯，要卡死</d><d p="463.54500,1,25,4351678,1534937624,0,604b67d0,4087060761149442">不如下电子书哦，用手机在哪里都可以看</d><d p="578.40400,1,25,4351678,1534937917,0,604b67d0,4087214415806464">之前是自身调用自身，现在是属于在int类中调用add，不属于自身调用自身</d><d p="199.13300,1,25,16777215,1535083446,0,f668a3fb,4163513593888768">哇，对象居然是可以想加的</d><d p="350.01600,1,25,16777215,1535288748,0,fbd94723,4271150931640320">C++也可以实现哒</d><d p="705.02700,1,25,15138834,1535291571,0,fbd94723,4272630762831872">类比10进制，10这个数左移一位变成100，相当于乘10，右移一位变成1，相当于除10</d><d p="21.11100,1,25,16777215,1535341913,0,fe8e78af,4299024301555712">谷歌神龟</d><d p="33.91100,1,25,16777215,1535341925,0,fe8e78af,4299030990422016">谷歌神龟的</d><d p="727.94100,1,25,16777215,1535596392,0,1e9325f7,4432444982820864">又开车了</d><d p="179.40500,1,25,16777215,1535597190,0,bb88ddd2,4432863148113922">2020年，python 4.7</d><d p="1.20900,1,25,16646914,1535870264,0,9496238d,4576032834715648">2018-9-2 14:37:37</d><d p="611.25200,1,25,16777215,1535976683,0,78de1fa5,4631826794545152">地板除</d><d p="232.86400,1,25,16777215,1535977381,0,125ff41,4632192802095104">这个重载简单</d><d p="384.82500,1,25,16777215,1535977482,0,125ff41,4632245923479552">有问题</d><d p="630.64000,1,25,16777215,1535977713,0,125ff41,4632366567391232">所以这个教程不太好咯</d><d p="161.26500,1,25,16777215,1536141965,0,17f5790a,4718482205704192">所以python无处不对象是这个意思？</d><d p="108.88500,1,25,16777215,1536300910,0,702e9c85,4801815358472192">第315条弹幕</d><d p="4.31500,1,25,16777215,1536389580,0,107e5630,4848303926673412">上节课的课后蛮简单的</d><d p="43.76900,1,25,16777215,1536389694,0,107e5630,4848363712282628">3本书还行</d><d p="300.98600,1,25,16777215,1536390215,0,107e5630,4848636610478084">跳过还行</d><d p="354.74500,1,25,16777215,1536390294,0,107e5630,4848678178652160">哦摩西咯一</d><d p="532.64400,1,25,16777215,1536390565,0,107e5630,4848820416413698">递归 23</d><d p="743.74000,1,25,16777215,1536391273,0,107e5630,4849191315570690">单片机课上用移位来实现流水灯</d><d p="107.73700,1,25,16776960,1536395661,0,c06463a2,4851491685269506">2018、9、8.  时间16.34，剩下的7位朋友你们好！</d><d p="172.91400,1,25,16777215,1536667057,0,f89e6a24,4993781339258948">现在都不用py了</d><d p="436.06000,1,25,16777215,1536843668,0,628302ca,5086376731607042">等下这个新int赋值函数哪里写的啊。。。</d><d p="540.00500,1,25,16777215,1536843776,0,628302ca,5086433428111360">23333</d><d p="586.49100,1,25,16777215,1536843870,0,628302ca,5086482602131460">也就是说try_int里面的3用try_int的加，int的3是int的加</d><d p="507.17100,1,25,16777215,1536951125,0,9ac970e3,5142714967916548">考前再刷一遍</d><d p="117.77500,1,25,16777215,1537073451,0,58c65d97,5206849181712384">第328条弹幕hh</d><d p="586.46400,1,25,16777215,1537186065,0,376fab10,5265891275046912">原来是调用try_int类的加法即自身，现在是调用int类的加法，不是自身</d><d p="573.28500,5,25,16646914,1537426997,0,29ff272e,5392208993714176">那么现在这样写可以是因为,他在add方法里调用的是int的add方法,不存在自己调用自己,</d><d p="573.28500,5,25,16646914,1537426953,0,29ff272e,5392186207633412">为什么先开始写的self+other会递归是因为 这样写代表调用add这个方法也就是 add方法里自己调用自己这个add方法.所以会不断递归.</d><d p="573.28500,5,25,16646914,1537427009,0,29ff272e,5392215238508548">既然如此 他就可以得出结果</d><d p="43.31700,5,25,16707842,1537807895,0,55ff8460,5591909072371712">三本书名字叫:《python参考手册》《像科学家一样思考学python》《python核心编程第二版》</d><d p="68.95700,5,25,14811775,1537807994,0,55ff8460,5591961169821696">自学编程python找到15k工作的路过</d><d p="60.91600,5,25,14811775,1537807974,0,55ff8460,5591950482735104">比如，完成同一个任务，C语言要写1000行代码，Java只需要写100行，而Python可能只要20行。</d><d p="81.35700,5,25,9487136,1537808052,0,55ff8460,5591991666606080">自学编程python找到15k工作的路过</d><d p="81.35700,5,25,6830715,1537808037,0,55ff8460,5591983553249280">比如，完成同一个任务，C语言要写1000行代码，Java只需要写100行，而Python可能只要20行。</d><d p="81.35700,5,25,15772458,1537808042,0,55ff8460,5591986465144832">我今日就要带佢走，我睇下边个敢胆拦我</d><d p="581.05000,1,25,16777215,1537976454,0,ad6c9e95,5680282499809282">因为int(self)返回实例，所以实例+实例</d><d p="191.57400,1,25,16777215,1538012257,0,4624be0e,5699053763952642">2018年就3.6了</d><d p="18.18200,1,25,16777215,1538399425,0,e5eae800,5902041306103810">小白菜</d><d p="500.32400,1,25,16777215,1538628779,0,7f2f394c,6022288960389120">other不是一个是3吗？</d><d p="260.81400,1,25,16777215,1538777723,0,31d42ec0,6100378410549250">C++的operator+(b)</d><d p="186.20100,1,25,16777215,1538903117,0,2bc77279,6166120959574018">改名Dragon的那个别跑 我还专门去查了下QAQ</d><d p="358.95200,1,25,16777215,1538903292,0,2bc77279,6166212906582016">2333</d><d p="649.44700,1,25,16777215,1538903717,0,2bc77279,6166435392389120">y因为 __add__ __sub__ 都是“魔法函数” 会在合适的时候自动调用</d><d p="403.78500,1,25,16777215,1539070130,0,f4febca,6253683677331456">死循环？</d><d p="75.69600,1,25,16777215,1539676107,0,c4fd181a,6571390635868160">自学的找到组织了</d><d p="184.71600,1,25,16777215,1540098073,0,92ff5bb8,6792622038843392">震惊</d><d p="307.34700,1,25,16777215,1540103658,0,e33bbcf2,6795550006444034">咋回事</d><d p="202.43900,1,25,16777215,1540367302,0,21b14eaa,6933775688138752">是吗，我可以有两个对象吗</d><d p="215.96400,1,25,16777215,1540884502,0,ecb33216,7204937633103872">卧槽</d><d p="15.00000,1,25,16777215,1540888792,0,f467076d,7207186601607168">互谅的广大朋友大家好</d><d p="575.90200,1,25,16777215,1540906090,0,76e7b772,7216255976603648">self是你实例化的try int类的对象，int（self）就把他的类型强转成整形，调用的就是整形类的add了</d><d p="342.25700,1,25,16777215,1541088753,0,ef1c0437,7312023559864320">int 类本身难道没有定义过+, -, *, /么</d><d p="413.92000,1,25,16777215,1541088867,0,ef1c0437,7312083336560640">我猜有。因为other没有定义。</d><d p="451.73500,1,25,16777215,1541088903,0,ef1c0437,7312102328893440">有点不懂。。</d><d p="682.12500,1,25,16777215,1541089229,0,ef1c0437,7312273453875200">C是高级语言啊。。。</d><d p="16.71500,1,25,16777215,1541464370,0,85c9c62a,7508955015675904">设计模式？</d><d p="4.88000,1,25,16777215,1541503034,0,f467076d,7529226309730306">互谅的广大朋友大家好</d><d p="571.69400,1,25,16777215,1541812058,0,5334e3d1,7691243738890240">螺旋懵比</d><d p="90.45600,1,25,16777215,1542365450,0,e5eae800,7981380788551682">自学编程年薪百万的路过。</d><d p="399.54400,1,25,16777215,1542392917,0,9f718c74,7995781342035968">定义方法就需要返回方法？</d><d p="107.17700,1,25,16777215,1542509682,0,b2893f54,8056999764819968">第252条弹幕</d><d p="138.16000,1,25,16777215,1543215297,0,4a2f9394,8426945098285056">自学编程比肩马云的路过</d><d p="44.68000,1,25,52480,1543217700,0,4aa7ea6e,8428204956057600">从36课开始 就看不懂了........</d><d p="654.42900,1,25,16777215,1543323662,0,20473ff0,8483759894560768">看不下去了</d><d p="718.30400,1,25,16777215,1543323705,0,20473ff0,8483782177325056">编译原理是不是好难哦</d><d p="19.13200,1,25,16777215,1543485346,0,8eb6cfdc,8568528663216128">想说零基础学起来还是有点费劲的</d><d p="47.92500,1,25,16777215,1543485388,0,8eb6cfdc,8568550520258560">红字真理</d><d p="736.17800,1,25,16777215,1543552351,0,39898be3,8603658427039744">电路一周就能学会</d><d p="130.56900,1,25,16777215,1543828803,0,a1ec570e,8748598993879040">另一位朋友你好</d><d p="490.08800,1,25,16777215,1543829250,0,a1ec570e,8748833289273344">12.3</d><d p="205.53600,1,25,16777215,1543927711,0,b849b6bf,8800455533527040">真滴？</d><d p="71.88800,1,25,16777215,1544449312,0,2613880b,9073924515561472">20181210CHD</d><d p="743.38600,1,25,16777215,1544517390,0,1325f4d1,9109617190633472">变成了6</d><d p="335.02800,1,25,16777215,1544659665,0,42fcf9d0,9184209989533696">sub全称subtraction是减法的意思</d><d p="335.02800,1,25,16777215,1544659911,0,42fcf9d0,9184339146309632">这里就相当于New_int继承了int这个BIF，而int.__sub__是一个包装描述符</d><d p="359.40100,1,25,16777215,1544660077,0,42fcf9d0,9184426191224832">不继承New就没有__add__的包装描述符</d><d p="492.52700,1,25,16777215,1544660237,0,42fcf9d0,9184509924737024">self绑定了a进来，other则是加法的另外一个数</d><d p="581.15100,1,25,16777215,1544660444,0,42fcf9d0,9184618420371456">魔术方法（wrapper descriptor)在特定情况下才会被调用</d><d p="364.46100,1,25,16777215,1544777608,0,9747b413,9246046422040576">class New_int(i</d><d p="367.49100,1,25,16777215,1544777622,0,9747b413,9246053605834752">我仍然是-2</d><d p="384.75600,4,25,52480,1544777640,0,9747b413,9246062876295168">我也是 都是 -2</d><d p="186.15300,5,25,16646914,1544857741,0,34e6d4ab,9288058979483648">算算你有多少对象</d><d p="235.75000,1,25,16777215,1544942432,0,ef460672,9332461475987456">End Sub。。。</d><d p="217.69000,1,25,16777215,1544942414,0,ef460672,9332451998433280">对。。。对象？</d><d p="73.09900,5,25,4351678,1545206335,0,dcc5c321,9470822335905792">不想回答可以闭嘴，都是初学的你秀什么优越啊，别人问的是为了后来的造福的，不爱回答你可以闭嘴</d><d p="124.18500,1,25,16646914,1545275294,0,be004d23,9506976736215040">我变色了嘛</d><d p="52.95700,1,25,16777215,1545414902,0,e19b8f0a,9580171543707648">都是17年的？我是18年12月22号穿越过来的</d><d p="222.40900,1,25,16777215,1545415011,0,e19b8f0a,9580229098995712">前面两个对象的，秀儿是你吗</d></i>